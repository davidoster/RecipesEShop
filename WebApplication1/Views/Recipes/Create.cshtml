@model EntityBuilding.Models.Recipe

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Recipe</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @{
                    var db = new EntityBuilding.Models.RecipesModel();
                    var categories = db.Categories;
                    <p>Select a Category</p>
                    <select id="categorySelect" onchange="getIngredientsByCategory()">
                        <option></option>
                        @{
                            foreach (var category in categories)
                            {
                                <option>@category.Name</option>
                            }
                        }
                    </select>
                    <p>Select the ingredients you need for this Category:</p>
                    
                    <div id="categoryIngredients"></div>

                    <select id="Ingredients" name="@Html.NameFor(model => model.Ingredients)">
                        <option id="Carrot" name="@Html.NameFor(model => model.Ingredients.Where(m => m.Name == "Carrot").FirstOrDefault())" value="@Html.NameFor(model => model.Ingredients.Where(m => m.Name == "Carrot").FirstOrDefault())">Carrot</option>
                        <option id="Asparagus" name="@Html.NameFor(model => model.Ingredients.Where(m => m.Name == "Asparagus").FirstOrDefault())" value="@Html.NameFor(model => model.Ingredients.Where(m => m.Name == "Asparagus").FirstOrDefault())">Asparagus</option>
                    </select>
                }
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
    @*Url: @Request.Url.AbsoluteUri*@
    @section scripts
    {
        <script src="~/Scripts/recipes.js"></script>
    }
</body>
</html>
